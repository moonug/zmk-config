/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI/ESC |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | SPC | RSE |

            bindings = <
&none  &kp GRAVE  &mt LALT Q  &mt LCTRL W    &lt 2 E          &lt 1 R   &mt LCTRL T   &mt RCTRL Y          &lt 1 U      &lt 2 I    &mt RCTRL O     &mt RALT P  &none  &none
           &none  &mt LALT A  &mt LCTRL S    &lt 2 D          &lt 1 F   &mt LCTRL G   &mt RCTRL H          &lt 1 J      &lt 2 K    &mt RCTRL L  &mt RALT SEMI  &none
           &none  &mt LALT Z  &mt LCTRL X    &lt 2 C          &lt 1 V   &mt LCTRL B   &mt RCTRL N          &lt 1 M  &lt 2 COMMA  &mt RCTRL DOT  &mt RALT FSLH  &none
                                           &lt 3 TAB  &mt LSHFT SPACE  &mt LGUI RET  &mt RGUI ESC  &mt RSHFT SPACE   &lt 3 CAPS
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans   &none  &mt LALT GRAVE  &mt LCTRL UNDER  &kp SINGLE_QUOTE   &kp LEFT_BRACE  &mt LCTRL LEFT_BRACKET  &mt RCTRL RIGHT_BRACKET  &kp RIGHT_BRACE  &kp PLUS  &mt RCTRL MINUS  &mt RALT EQUAL  &none  &none
        &trans   &mt LALT EXCL     &mt LCTRL AT          &kp HASH         &kp DLLR         &mt LCTRL PRCNT                &kp CARET         &kp AMPS  &kp STAR         &kp LPAR        &kp RPAR  &none
        &trans          &kp N1           &kp N2            &kp N3         &kp LPAR      &mt LCTRL KP_COMMA         &mt RCTRL KP_DOT         &kp RPAR    &kp N8           &kp N9   &mt RALT BSLH  &none
                                                           &trans  &mt LSHFT SPACE                  &trans                   &trans   &mt RSHFT BSPC    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | MUT  | VOLD | VOLU | PRSC | PAUS  | SCLK |     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | LEFT | DOWN |  UP  | RGHT | LSHFT |      |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | HOME | END  | PGUP | PGDN | CLCK  |      |
            //                          |     |     | ADJ |   | ADJ  |      |      |

            bindings = <
&trans   &none     &kp KP_SLASH  &kp N7  &kp N8            &kp N9  &kp KP_MINUS  &kp C_MUTE      &kp C_VOL_DN  &kp C_VOL_UP  &kp PSCRN  &kp PAUSE_BREAK  &trans  &trans
        &trans  &kp KP_MULTIPLY  &kp N4  &kp N5            &kp N6   &kp KP_PLUS    &kp LEFT          &kp DOWN        &kp UP  &kp RIGHT   &kp SCROLLLOCK  &trans
        &trans           &kp N0  &kp N1  &kp N2            &kp N3    &kp KP_DOT    &kp HOME           &kp END     &kp PG_UP  &kp PG_DN         &kp CAPS  &trans
                                         &trans  &mt LSHIFT EQUAL        &trans      &trans  &mt RSHFT DELETE        &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RST | BLDR  | BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BLDR  | RST |
            //       | BTCLR |     |     |     | APP | INS |   | INS | APP |     |     |     | BTCLR |
            //       |       |     |     |     |     |     |   |     |     |     |     |     |       |
            //                           |     |     |     |   |     |     |     |

            bindings = <
&reset  &bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bootloader  &reset
         &bt BT_CLR         &none         &none         &none     &kp K_APP       &kp INS       &kp INS     &kp K_APP         &none         &none         &none   &bt BT_CLR
              &none        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7        &kp F8        &kp F9       &kp F10        &none
                                                       &trans       &kp F11        &trans        &trans       &kp F12        &trans
            >;
        };
    };
};
